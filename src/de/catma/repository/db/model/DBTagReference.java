/*   
 *   CATMA Computer Aided Text Markup and Analysis
 *   
 *   Copyright (C) 2009-2013  University Of Hamburg
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package de.catma.repository.db.model;

// Generated 22.05.2012 21:58:37 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Tagreference generated by hbm2java
 */
@Entity
@Table(name = "tagreference", catalog = "CatmaRepository")
public class DBTagReference implements java.io.Serializable {

	private Integer tagReferenceId;
	private int characterStart;
	private int characterEnd;
	private DBUserMarkupCollection dbUserMarkupCollection;
	private DBTagInstance dbTagInstance;

	public DBTagReference() {
	}

	public DBTagReference(int characterStart, int characterEnd,
			DBUserMarkupCollection dbUserMarkupCollection,
			DBTagInstance dbTagInstance) {
		this.characterStart = characterStart;
		this.characterEnd = characterEnd;
		this.dbUserMarkupCollection = dbUserMarkupCollection;
		this.dbTagInstance = dbTagInstance;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "tagReferenceID", unique = true, nullable = false)
	public Integer getTagReferenceId() {
		return this.tagReferenceId;
	}

	public void setTagReferenceId(Integer tagReferenceId) {
		this.tagReferenceId = tagReferenceId;
	}

	@Column(name = "characterStart", nullable = false)
	public int getCharacterStart() {
		return this.characterStart;
	}

	public void setCharacterStart(int characterStart) {
		this.characterStart = characterStart;
	}

	@Column(name = "characterEnd", nullable = false)
	public int getCharacterEnd() {
		return this.characterEnd;
	}

	public void setCharacterEnd(int characterEnd) {
		this.characterEnd = characterEnd;
	}

	@ManyToOne
	@JoinColumn(name = "userMarkupCollectionID", nullable = false)
	@Cascade({CascadeType.SAVE_UPDATE})
	public DBUserMarkupCollection getDbUserMarkupCollection() {
		return dbUserMarkupCollection;
	}
	
	public void setDbUserMarkupCollection(
			DBUserMarkupCollection dbUserMarkupCollection) {
		this.dbUserMarkupCollection = dbUserMarkupCollection;
	}
	
	@ManyToOne
	@JoinColumn(name = "tagInstanceID", nullable = false)
	@Cascade({CascadeType.SAVE_UPDATE})
	public DBTagInstance getDbTagInstance() {
		return dbTagInstance;
	}

	public void setDbTagInstance(DBTagInstance dbTagInstance) {
		this.dbTagInstance = dbTagInstance;
	}
}
