/*   
 *   CATMA Computer Aided Text Markup and Analysis
 *   
 *   Copyright (C) 2009-2013  University Of Hamburg
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package de.catma.repository.db.model;

// Generated 23.05.2012 12:54:30 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import de.catma.document.repository.AccessMode;

/**
 * UserUsermarkupcollection generated by hbm2java
 */
@Entity
@Table(name = "user_usermarkupcollection", catalog = "CatmaRepository")
public class DBUserUserMarkupCollection implements java.io.Serializable {

	private Integer userUsermarkupcollectioId;
	private DBUser dbUser;
	private DBUserMarkupCollection dbUserMarkupCollection;
	private int accessMode;
	private boolean owner;

	public DBUserUserMarkupCollection() {
	}

	public DBUserUserMarkupCollection(DBUser dbUser,
			DBUserMarkupCollection dbUserMarkupCollection) {
		this.dbUser = dbUser;
		this.dbUserMarkupCollection = dbUserMarkupCollection;
		this.accessMode = AccessMode.WRITE.getNumericRepresentation();
		this.owner = true;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_usermarkupcollectioID", unique = true, nullable = false)
	public Integer getUserUsermarkupcollectioId() {
		return this.userUsermarkupcollectioId;
	}

	public void setUserUsermarkupcollectioId(Integer userUsermarkupcollectioId) {
		this.userUsermarkupcollectioId = userUsermarkupcollectioId;
	}

	@ManyToOne
	@JoinColumn(name = "userID", nullable = false)
	public DBUser getDbUser() {
		return dbUser;
	}

	public void setDbUser(DBUser dbUser) {
		this.dbUser = dbUser;
	}
	
	@ManyToOne
	@JoinColumn(name = "userMarkupCollectionID", nullable = false)
	public DBUserMarkupCollection getDbUserMarkupCollection() {
		return dbUserMarkupCollection;
	}

	public void setDbUserMarkupCollection(
			DBUserMarkupCollection dbUserMarkupCollection) {
		this.dbUserMarkupCollection = dbUserMarkupCollection;
	}

	@Column(name = "accessMode", nullable = false)
	public int getAccessMode() {
		return this.accessMode;
	}

	public void setAccessMode(int accessMode) {
		this.accessMode = accessMode;
	}

	@Column(name = "owner", nullable = false)
	public boolean isOwner() {
		return this.owner;
	}

	public void setOwner(boolean owner) {
		this.owner = owner;
	}

}
