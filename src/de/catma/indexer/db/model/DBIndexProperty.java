package de.catma.indexer.db.model;

// Generated 04.05.2012 21:11:20 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Position generated by hbm2java
 */
@Entity
@Table(name = "property", catalog = "CatmaIndex")
public class DBIndexProperty implements java.io.Serializable {

	public static final String TABLENAME = "CatmaIndex.property";
	private Integer propertyId;
	private byte[] tagInstanceId;
	private byte[] propertyDefinitionId;
	private String value;
	
	public DBIndexProperty() {
	}

	public DBIndexProperty(byte[] tagInstanceId, byte[] propertyDefinitionId,
			String value) {
		this.tagInstanceId = tagInstanceId;
		this.propertyDefinitionId = propertyDefinitionId;
		this.value = value;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "positionID", unique = true, nullable = false)
	public Integer getPropertyId() {
		return propertyId;
	}
	public void setPropertyId(Integer propertyId) {
		this.propertyId = propertyId;
	}
	
	@Column(name = "tagInstanceID", nullable = false)
	public byte[] getTagInstanceId() {
		return tagInstanceId;
	}
	
	public void setTagInstanceId(byte[] tagInstanceId) {
		this.tagInstanceId = tagInstanceId;
	}
	
	@Column(name = "propertyDefinitionID", nullable = false)
	public byte[] getPropertyDefinitionId() {
		return propertyDefinitionId;
	}

	public void setPropertyDefinitionId(byte[] propertyDefinitionId) {
		this.propertyDefinitionId = propertyDefinitionId;
	}
	
	@Column(name = "value", length=300)
	public String getValue() {
		return value;
	}
	
	public void setValue(String value) {
		this.value = value;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((propertyId == null) ? 0 : propertyId.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		DBIndexProperty other = (DBIndexProperty) obj;
		if (propertyId == null) {
			if (other.propertyId != null) {
				return false;
			}
		} else if (!propertyId.equals(other.propertyId)) {
			return false;
		}
		return true;
	}
	
	
}
