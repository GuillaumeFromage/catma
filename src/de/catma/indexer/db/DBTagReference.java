package de.catma.indexer.db;

// Generated 09.05.2012 15:49:49 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Tagreference generated by hbm2java
 */
@Entity
@Table(name = "tagreference", catalog = "CatmaIndex")
class DBTagReference implements java.io.Serializable {

	private Integer tagReferenceId;
	private String documentId;
	private String userMarkupColletionId;
	private String tagDefinitionPath;
	private byte[] tagDefintionId;
	private String tagDefinitionVersion;
	private byte[] tagInstanceId;
	private int characterStart;
	private int characterEnd;

	public DBTagReference() {
	}

	public DBTagReference(String documentId, String userMarkupColletionId,
			String tagDefinitionPath, byte[] tagDefintionId, 
			String tagDefinitionVersion,
			byte[] tagInstanceId, int characterStart, int characterEnd) {
		this.documentId = documentId;
		this.userMarkupColletionId = userMarkupColletionId;
		this.tagDefinitionPath = tagDefinitionPath;
		this.tagDefintionId = tagDefintionId;
		this.tagDefinitionVersion = tagDefinitionVersion;
		this.tagInstanceId = tagInstanceId;
		this.characterStart = characterStart;
		this.characterEnd = characterEnd;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "tagReferenceID", unique = true, nullable = false)
	public Integer getTagReferenceId() {
		return this.tagReferenceId;
	}

	public void setTagReferenceId(Integer tagReferenceId) {
		this.tagReferenceId = tagReferenceId;
	}

	@Column(name = "tagDefinitionVersion", nullable = false, length = 25)
	public String getTagDefinitionVersion() {
		return this.tagDefinitionVersion;
	}

	public void setTagDefinitionVersion(String tagDefinitionVersion) {
		this.tagDefinitionVersion = tagDefinitionVersion;
	}

	@Column(name = "documentID", nullable = false, length = 300)
	public String getDocumentId() {
		return this.documentId;
	}

	public void setDocumentId(String documentId) {
		this.documentId = documentId;
	}

	@Column(name = "userMarkupColletionID", nullable = false, length = 300)
	public String getUserMarkupColletionId() {
		return this.userMarkupColletionId;
	}

	public void setUserMarkupColletionId(String userMarkupColletionId) {
		this.userMarkupColletionId = userMarkupColletionId;
	}

	@Column(name = "tagDefinitionPath", nullable = false, length = 2048)
	public String getTagDefinitionPath() {
		return this.tagDefinitionPath;
	}

	public void setTagDefinitionPath(String tagDefinitionPath) {
		this.tagDefinitionPath = tagDefinitionPath;
	}

	@Column(name = "tagDefintionID", nullable = false)
	public byte[] getTagDefintionId() {
		return this.tagDefintionId;
	}

	public void setTagDefintionId(byte[] tagDefintionId) {
		this.tagDefintionId = tagDefintionId;
	}

	@Column(name = "tagInstanceID", nullable = false)
	public byte[] getTagInstanceId() {
		return this.tagInstanceId;
	}

	public void setTagInstanceId(byte[] tagInstanceId) {
		this.tagInstanceId = tagInstanceId;
	}

	@Column(name = "characterStart", nullable = false)
	public int getCharacterStart() {
		return this.characterStart;
	}

	public void setCharacterStart(int characterStart) {
		this.characterStart = characterStart;
	}

	@Column(name = "characterEnd", nullable = false)
	public int getCharacterEnd() {
		return this.characterEnd;
	}

	public void setCharacterEnd(int characterEnd) {
		this.characterEnd = characterEnd;
	}

}
